❤️ 基本信息

    🔵 VPS配置信息: 
        内存256MB,硬盘12G SSD,宽带1G,流量500G每月. 价格 120RMB/年, 搬瓦工.美国.


    🔵 CentOS 6 VS CentOS7

        最新版本是7. 但是一般服务器.以及各种教程都是6.
        新手避免不了学各种教程还是建议6.  

            常见区别区别: 
            比如某些服务的启动和停止 
                [CentOS6]
                $ service service_name start
                $ service service_name stop
                $ service sshd restart/status/reload

                [CentOS7]
                $ systemctl start service_name
                $ systemctl stop service_name
                $ systemctl restart/status/reload sshd

    🔵 系统版本
        CentOS X86               这个就是 32位系统 (❗️我的选择❗️)
        CentOS X86-devel         开发版本,软件新但是不太稳定.
        CentOS X86-minimal       精简版本,很多功能需要手动下载安装.
        CentOS X86_64            这个就是 64位系统
        CentOS X86_64-devel
        CentOS X86_64-minimal


    🔵 MySQL 版本选择
        1G 一下内存的只能选择 MySQL 5.5  不要做死上5.6


    🔵 php 版本选择
        理论是越新越好... 








❤️ SSH 免密码登录

    🔵SSH 改默认端口
        帮瓦工密码: 一个是网页控制台的密码; 一个是终端ssh的密码. 不一样的..

        ssh 初始登录密码查看:    控制台 → root password modification → 手动生成一个 
        SSH 初始登录端口查看:    控制台 → main controls → ssh port 

        🔸 登录ssh                  
            ssh -p 27401 root@23.105.192.96
            👁‍🗨 27401 改成你自己的ssh初始端口,23.105.192.96 改成你服务器的外网IP
        🔸 修改SSH密码(先登录)      passwd → 输入两次密码 就改掉了.
        🔸 修改初始SSH端口: 把两个文件里面的port 22 改成 你想要的端口.如2222
                下面的两个命令可以帮你快捷修改文件.  

                🔅 sed -i 's/^#...Port.22/Port 2222/g' /etc/ssh/ssh_config
                //作用: vi /etc/ssh/ssh_config    取消Port 22 前的注释，并将22改成2222

                🔅 sed -i 's/^Port.22/Port 2222/g' /etc/ssh/sshd_config
                //作用: vi /etc/ssh/sshd_config   取消Port 22 前的注释，并将22改成2222

        🔸 重启sshd  
            🔅 systemctl restart sshd.service   CentOS7 的重启方法.
            🔅 service sshd restart             CentOS6 的重启方法

        🔸 重新登录
            ssh -p 5222 xujian@198.74.49.76



    🔵 SSH 免密码登录 (密钥登录)
        大致流程:
            1. 本地生成一对密钥.
            2. 服务器用户目录建立 .ssh 文件夹, 并给700权限
            3. 把本地公钥用scp传到服务器
            4. 服务器上把公钥加到公钥验证列表.

        Mac OS 密钥默认生成路径:
            cd /Users/v/.ssh/ 下有个 id_rsa.pub 就说明生成成功了.

        🔸 服务器: cd && mkdir .ssh && chmod 700 .ssh

        🔸 客户端: 上传公钥文件(id_rsa.pub):
            🔅 cd /Users/v/.ssh/
            🔅 scp -P 2222 -r id_rsa.pub root@23.105.192.96:~/.ssh/
                    P             必须大写.
                    27401         服务器的SSh端口     
                    root          服务器的ssh用户名
                    23.105.192.96 服务器IP
                    SSH初始密码:  root password modification → 新设置一个
                
        🔸 注册公钥文件: 把你的公钥添加到公钥验证列表.
            🔅 cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
            作用就是把id_rsa.pub文件里的内容 全部追加到authorized_keys这个文件 后面.
            如果没有 authorized_keys这个文件会自动帮你建立的.
            用这种方法 一台服务器可以有很多人都ssh 免密码登录.
            因为authorized_keys这个身份验证文件中可以添加很多人的公钥(id_rsa.pub)

            也可以直接重命名上传的文件.  🔅 mv id_rsa.pub authorized_keys
            这种方法 整个验证列表中 只有你的公钥.这个服务器只有你能ssh 免密码登录.

            📌📌📌📌📌 公共wifi 每两小时就会断开. 断开后怎么让Mac 的iterm 自动重新连接服务器呢.
            /etc/ssh/ssh_config 这个ssh配置文件最后加上一行 ServerAliveInterval 6 就可以了.
            每隔6秒就会向服务器发一个 KeepAlive 请求，避免断开连接。

                    🔅 sudo vi /etc/ssh/ssh_config
                        添加: ServerAliveInterval 6





❤️ ZSH 安装&配置

    📌 系统环境: CentOS 
    默认的shell 太难看. 黑白的,废话不多说. 直接用全世界公认的最好的shell: ZSH.
    ZSH 配置有点麻烦. 这也不是事情.有人早把你配好了.这人就是 oh-my-zsh

    📌 大致流程:      安装 zsh、git、oh-my-zsh、Autojump插件
    🔸 安装 ZSH    🔅 yum install zsh -y
    🔸 安装 Git    🔅 yum install git
    🔸 安装 oh-my-zsh
    🔅 sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"

        - 查看当前已装 shell   🔅 cat /etc/shells
        - 设置zsh为默认shell   🔅 chsh -s /bin/zsh

    🔵 Autojump 极品插件
        autojump插件使你能够快速切换路径，
        再也不需要逐个敲入目录，只需敲入目标目录，就可以迅速切换目录。

        📌 最终效果:
            ➜  crypto git:(manyuser) ✗ pwd
            /root/shadowsocksr/shadowsocks/crypto
            ➜  crypto git:(manyuser) ✗ cd /
            ➜  / j cry
            /root/shadowsocksr/shadowsocks/crypto
            ➜  crypto git:(manyuser) ✗

            4个命令.  
            第一个: 输出当前目录.
            第二个: 跳转到根目录.
            第三个: 使用 j 快速跳转.
            第四个: 看到没. 只输入了 j cry 就跳转过去了.
            你手速慢,估计得输入半天吧.... 
            安装好autojump 就可以使用j 命令了.


        📌 安装步骤
            🔅 git clone https://github.com/joelthelion/autojump.git
            🔅 cd autojump
            🔅 ./install.py
                ❗️❗️❗️ 注意安装完最后的提示!!! ❗️❗️❗️
                Please manually add the following line(s) to ~/.zshrc:
                        [[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.a
                utojump/etc/profile.d/autojump.sh
                        autoload -U compinit && compinit -u
                Please restart terminal(s) before running autojump.

                就是让你手动把下面两行 加到  ~/.zshrc 中.
                位置随意.一般加到文件尾行
            🔅 vi ~/.zshrc
                [[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.autojump/etc/profile.d/autojump.sh
                autoload -U compinit && compinit -u

                注意是两行!!!! 有时候终端不够宽.会自动把你分成多行, 给你添加几个空格.就会出错!!!
                让后重启shell.如果是远程vps的话.直接断开ssh 重连就可以.

                然后就可以用 j 命令了. 只要你cd 过某个文件夹. 这个插件就会记住这个路径.






❤️  NetSpeed 加速软件, 终端顺畅好几倍!!

    详情安装步骤参考: http://banwagongvpn.lofter.com/post/1d541acc_7b4bfc0
    也可参考 VPS-Speed.txt
    
    🔵简单安装步骤:
    🔸 下载
🔅 wget https://coding.net/u/njzhenghao/p/download/git/raw/master/net_speeder-installer.sh

    🔸 编译并安装
    🔅 bash net_speeder-installer.sh

    🔸 开启端口加速
    🔅 nohup /usr/local/net_speeder/net_speeder venet0 "ip" >/dev/null 2>&1 &
    
    🔸 查看是否成功开启
        ✘✘∙𝒗 .ssh ping 23.105.192.96
        PING 23.105.192.96 (23.105.192.96): 56 data bytes
        64 bytes from 23.105.192.96: icmp_seq=0 ttl=52 time=166.606 ms
        64 bytes from 23.105.192.96: icmp_seq=0 ttl=76 time=166.627 ms (DUP!)
        64 bytes from 23.105.192.96: icmp_seq=1 ttl=52 time=149.210 ms
        64 bytes from 23.105.192.96: icmp_seq=1 ttl=76 time=149.230 ms (DUP!)
        64 bytes from 23.105.192.96: icmp_seq=2 ttl=52 time=154.355 ms
        64 bytes from 23.105.192.96: icmp_seq=2 ttl=76 time=154.376 ms (DUP!)
        
        ping 一个数据包. 会放回两个一模一样的数据包. (DUP). 说明成功了.

    🔸 重启服务器看看 是否会自动开启 🔅 reboot
       ✘✘∙𝒗 .ssh ping 23.105.192.96
        PING 23.105.192.96 (23.105.192.96): 56 data bytes
        64 bytes from 23.105.192.96: icmp_seq=0 ttl=52 time=149.929 ms
        64 bytes from 23.105.192.96: icmp_seq=1 ttl=52 time=157.864 ms
        64 bytes from 23.105.192.96: icmp_seq=2 ttl=52 time=157.611 ms
       
       答案是不会....


    🔸 设置开机启动
            启动这个工具只需要一行命令就可以了.
            开机启动 就是一个文件.  /etc/rc.local
            这个文件里面的所有命令.都会在开机后 自动运行.
            只要把 
            nohup /usr/local/net_speeder/net_speeder venet0 "ip" >/dev/null 2>&1 &
            这行加到  /etc/rc.local 的行尾就可以了.
            你可以手动用 vi 把命令加到/etc/rc.loacl 文件尾部就可以了.
            也可以用下面命令来快速添加..
            这里注意 echo 后面的是 '' 英文的单引号, 不是逗号什么的..
        🔅 echo 'nohup /usr/local/net_speeder/net_speeder venet0 "ip" >/dev/null 2>&1 &' >> /etc/rc.local

    🔸 再重启 ping下. 发现都是 DUP! 也就是服务器发出双倍数据包了.




=================================================================================================
=================================================================================================
        上面是最最基本的环境,下面就该搭建LNMP环境了.
        服务器就是拿来运行各种服务的. LNMP/LAMP 环境是免不了要装的.
        而且这个安装 比较费时间. 起码半个小时+.
        ❗️❗️原则上不推荐一键安装脚本. 谁知道里面有什么后门...


❤️ LNMP 一键安装脚本.    
    参考网站:  https://lnmp.org/install.html  

    直接运行下面命令就会自动安装LNMP环境了.
    🔅 wget -c http://soft.vpser.net/lnmp/lnmp1.3-full.tar.gz && tar zxf lnmp1.3-full.tar.gz && cd lnmp1.3-full && ./install.sh lnmp

❗️❗️ 注意点: 
        📌 需要输入数据库密码. 并牢记这个密码
        📌 其他选择 一律默认吧
        📌 php 版本必须大于 5.6  选5.6.22 或者 php 7.0.7 


    安装需要蛮久的. ... 
    安装成功 最后是绿色的字.
    安装失败 最后是红色的字.

    安装最后应该是这样的.
    LNMP脚本就会自动安装编译Nginx、MySQL、PHP、phpMyAdmin、等几个软件。

    ============================== Check install ==============================
    Checking ...
    Nginx: OK
    MySQL: OK
    PHP: OK
    PHP-FPM: OK
    Clean src directory...
    +------------------------------------------------------------------------+
    |          LNMP V1.3 for CentOS Linux Server, Written by Licess          |
    +------------------------------------------------------------------------+
    |         For more information please visit http://www.lnmp.org          |
    +------------------------------------------------------------------------+
    |    lnmp status manage: lnmp {start|stop|reload|restart|kill|status}    |
    +------------------------------------------------------------------------+
    |  phpMyAdmin: http://IP/phpmyadmin/                                     |
    |  phpinfo: http://IP/phpinfo.php                                        |
    |  Prober:  http://IP/p.php                                              |
    +------------------------------------------------------------------------+
    |  Add VirtualHost: lnmp vhost add                                       |
    +------------------------------------------------------------------------+
    |  Default directory: /home/wwwroot/default                              |
    +------------------------------------------------------------------------+
    |  MySQL/MariaDB root password: xujian0219                          |
    +------------------------------------------------------------------------+
    +-------------------------------------------+
    |    Manager for LNMP, Written by Licess    |
    +-------------------------------------------+
    |              http://lnmp.org              |
    +-------------------------------------------+
    nginx (pid 22560 22559) is running...
    php-fpm is runing!
    MySQL running (23056)                                      [确定]
    Active Internet connections (only servers)
    Proto Recv-Q Send-Q Local Address               Foreign Address             State
    tcp        0      0 23.105.192.96:443           0.0.0.0:*                   LISTEN
    tcp        0      0 0.0.0.0:27401               0.0.0.0:*                   LISTEN
    tcp        0      0 0.0.0.0:3306                0.0.0.0:*                   LISTEN
    tcp        0      0 23.105.192.96:6666          0.0.0.0:*                   LISTEN
    tcp        0      0 0.0.0.0:2190                0.0.0.0:*                   LISTEN
    tcp        0      0 0.0.0.0:80                  0.0.0.0:*                   LISTEN
    tcp        0      0 127.0.0.1:53                0.0.0.0:*                   LISTEN
    tcp        0      0 23.105.192.96:53            0.0.0.0:*                   LISTEN
    tcp        0      0 :::27401                    :::*                        LISTEN
    Install lnmp V1.3 completed! enjoy it.
    [root@localhost lnmp1.3-full]#





❤️ 检验是否成功安装:

    🔵 正常可以直接用 🔅 http://23.105.192.96/  登录服务器初始网站了. 这里IP地址改成你自己的就可以. 
          这个网站是用nginx搭建的. 
          网站内容是这个lnmp脚本自动生成的.
          网站的默认根目录是 /home/wwwroot/default/index.php

    🔵 正常可以直接用 🔅 http://23.105.192.96/phpmyadmin/  登录数据库了. 这里IP地址改成你自己的就可以.
        📌 默认数据库是只能用网页登录的. 你要用别的工具 需要手动开启数据库的远程功能.


    🔵 最好我们在本地机器 用nmap 来测试服务器到底开放了哪些端口.
        ✘✘∙𝒗 Desktop nmap 23.105.192.96

        Starting Nmap 7.25BETA1 ( https://nmap.org ) at 2017-03-31 09:51 CST
        Nmap scan report for 23.105.192.96.16clouds.com (23.105.192.96)
        Host is up (0.17s latency).
        Not shown: 992 closed ports
        PORT     STATE    SERVICE
        53/tcp   open     domain
        80/tcp   open     http
        111/tcp  filtered rpcbind
        443/tcp  open     https
        1723/tcp filtered pptp
        2190/tcp open     tivoconnect
        3306/tcp open     mysql
        6666/tcp open     irc

        Nmap done: 1 IP address (1 host up) scanned in 19.65 seconds

        发现有个 3306 的数据库端口.说明数据库正常启动了.




❤️ LNMP状态管理命令：

LNMP 1.2+状态管理:     lnmp {start|stop|reload|restart|kill|status}
LNMP 1.2+各个程序状态: lnmp {nginx|mysql|mariadb|php-fpm|pureftpd} {start|stop|reload|restart|kill|status}
Nginx状态管理：        /etc/init.d/nginx {start|stop|reload|restart}
MySQL状态管理：        /etc/init.d/mysql {start|stop|restart|reload|force-reload|status}
Memcached状态管理：    /etc/init.d/memcached {start|stop|restart}
PHP-FPM状态管理：      /etc/init.d/php-fpm {start|stop|quit|restart|reload|logrotate}
PureFTPd状态管理：     /etc/init.d/pureftpd {start|stop|restart|kill|status}
ProFTPd状态管理：      /etc/init.d/proftpd {start|stop|restart|reload}
Redis状态管理：        /etc/init.d/redis {start|stop|restart|kill}
    如重启LNMP，1.2+输入命令：lnmp restart 即可；
    单独重启mysql：/etc/init.d/mysql restart 也可以 lnmp mysql restart ，两个是一样的。



❤️ 各种常见问题:    https://lnmp.org/faq.html

    🔵 Mysql 开启远程连接:
            通过80端口可以登录phpmyadmin,但是不能用别的数据库软件远程连接到数据库.
            为了安全，lnmp 的大部分版本都是禁止远程连接mysql的

        1、首先需要自己在phpmyadmin里添加一个用户 主机为 % 的任意主机（也可以编辑已有的用户）

        2、并且iptables 里删除DROP 3306端口的规则，
        iptables教程：https://www.vpser.net/security/linux-iptables.html




❤️ 各种版本升级方法 https://lnmp.org/faq/lnmp1-2-upgrade.html
    ❗️❗️❗️以下操作均需要在lnmp压缩包解压后的目录里运行

    🔵 PHP 升级:
        🔅 ./upgrade.sh php          回车
        🔅 输入一个 版本号 如 7.1.3  回车，再次回车确认即可开始升级。
        到http://www.php.net/downloads.php 获取版本号， 
        这个升级非常慢!!! 操 几乎就是安装整个LNMP环境的时间了....


🔵 Mysql 升级 5.6
        cd 到lnmp的解压包
        (升级前 不能关闭数据库.)
        ./upgrade.sh mysql 
        输入root密码
        输入版本号 5.7.18





❗️❗️❗️❗️❗️ 最后, 搭建好基础的环境后. 务必务必 去控制面板 做系统快照. ❗️❗️❗️❗️❗️
https://kiwivm.64clouds.com/main.php
→ Snapshots → 快照就是系统备份.   备份和恢复只要几秒钟!!!!! 
再也不用担心服务器被你折腾坏了. 









🔵 ssh 自动断开问题

    vi /etc/ssh/sshd_config
    将ClientAliveInterval 0和ClientAliveCountMax 3的注释符号去掉


    ClientAliveInterval对应的0改成60,
        ClientAliveInterval指定了服务器端向客户端请求消息的时间间隔, 默认是0, 不发送.
        而ClientAliveInterval 60表示每分钟发送一次, 然后客户端响应, 这样就保持长连接了

        ClientAliveCountMax表示服务器发出请求后客户端没有响应的次数达到一定值, 就自动断开. 正常情况下, 客户端不会不响应.

    service sshd restart
    重启ssh 应该就可以了.





👹 ssh 连不上服务器

        ✘✘∙𝒗 Desktop ssh -p 2222 root@23.105.192.96
        ssh_exchange_identification: read: Connection reset by peer


        先重启!!!!  估计是机器负载太高了.... 一般来说都是内存不够用... 


        还连不上.  那就查看 ssh 详细错误. 用 -v 参数.

        ✘✘∙𝒗 Desktop ssh -p 2222 root@23.105.192.96 -v
        OpenSSH_7.4p1, LibreSSL 2.5.0
        debug1: Reading configuration data /Users/v/.ssh/config
        debug1: Reading configuration data /etc/ssh/ssh_config
        debug1: Connecting to 23.105.192.96 [23.105.192.96] port 2222.
        debug1: Connection established.
        debug1: identity file /Users/v/.ssh/id_rsa type 1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_rsa-cert type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_dsa type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_dsa-cert type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_ecdsa type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_ecdsa-cert type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_ed25519 type -1
        debug1: key_load_public: No such file or directory
        debug1: identity file /Users/v/.ssh/id_ed25519-cert type -1
        debug1: Enabling compatibility mode for protocol 2.0
        debug1: Local version string SSH-2.0-OpenSSH_7.4
        ssh_exchange_identification: Connection closed by remote host


        没有文件. 要么是文件真的不存在. 要么是没有权限. 







