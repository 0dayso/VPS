
参考 待看: http://www.jianshu.com/p/89163e927a2c




换行符号: \n


🔵 单引号处理! ✔︎



如需要将文件中的Hi替换为Hello:

sed 's/Hi/Hello/g' test.txt > new_test.txt

我们注意到，sed是以单引号作为关键字的，那当我们需要处理的关键字里面包含单引号的时候，这时候改如何处理？
通常的想法是转义。如需要将文件中的’Hi’替换为’Hello’：

sed 's/\'Hi\'/\'Hello\'/g' test.txt > new_test.txt

实际上这样不起作用，这时候不能转义，

❗️❗️❗️❗️最简单的方法，就是把sed的单引号变为双引号：

sed "s/'Hi'/'Hello'/g" test.txt > new_test.txt








🔵 sed 简介
  直接编辑文本. 
  对于修改配置文件非常方便. 不在需要vi打开文件. 编辑 .再退出文件. 一行命令就搞定.






🔵 sed语法: 


sed + 功能选项 + 条件选项 
功能选项 -i  就是直接修改原文件.
条件选项







sed + 命令 + 文件路径



sed -i 's/原内容/修改后内容/g' filePath




如果字符串中含有单引号. 加\是得不到我们想要的结果的.
功能部分 先用 双引号. 这样不用反斜杆就可以输出内容.




🔵 单双 引号区别.
❗️❗️❗️单引号：对其中的内容不做任何处理。  不能用变量!!!
❗️❗️❗️双引号：先对其中的内容进行算术扩展。可以用变量!!!

单引号内 好像无法用\' 来变成 '
双引号内 好像可以用\' 来变成'


🔵 特殊符号.

内容里面经常会有特殊符号.  需要转义后才能用!
一般特殊符号 添加\ 就可以了 但是不是所有的符号都可以这样的.



/   ➜ \/
$
^
'
.



'  ➜ \'
空格 ➜ \s
[]  ➜  \[\]



🔵 删除行

sed -i '/正则式匹配行/d'
sed -i '/ALLOWED_HOSTS\s=\s\[\]/d' /home/djSite/djSite/settings.py









sed是实现对流的编辑。通常，我们使用sed可以实现内容的编辑后然后保存成另外的一个文件，如果正确的话，才写入到源文件。但是某些时候，我们需要直接修改文件，因为，保存文件到一个文件，然后再覆盖原文件的办法显得很麻烦。
其实很简单，只需要一个 -i 参数就可以了。
比如，我想替换文件中的 properties 为 property ,可以使用

sed  's/properties/property/g'  build.xml

这种方式，其实并没有修改build.xml文件的内容。如果想保存修改，通常的做法就需要重定向到另外的一个文件
sed  's/properties/property/g'  build.xml > build.xml.tmp
这样，build.xml.tmp文件就是修改后的文件.
如果无误，那么就可以用
mv build.xml.tmp build.xml
覆盖原文件。
如果想直接修改源文件，而没有这样的过程，可以用下面的命令

sed  -i 's/properties/property/g'  build.xml

这样，就直接修改了build.xml文件。




🔵 例一:

mysite/settings.py 
中的  ALLOWED_HOSTS = [] 
改成: ALLOWED_HOSTS = ["23.105.192.96", "www.0214.help"] 


语法: sed -i '/匹配行/c 修改内容' filePath



sed -i '/ALLOWED_HOSTS/c ALLOWED_HOSTS = ["23.105.192.96", "www.0214.help"] ' /home/djSite/djSite/settings.py









a命令和i命令

a命令就是append， i命令就是insert，它们是用来添加行的。如：


# 其中的1i表明，其要在第1行前插入一行（insert）
$ sed "1 i This is my monkey, my monkey's name is wukong" my.txt
This is my monkey, my monkey's name is wukong
This is my cat, my cat's name is betty
This is my dog, my dog's name is frank
This is my fish, my fish's name is george
This is my goat, my goat's name is adam
 

# 其中的1a表明，其要在最后一行后追加一行（append）
$ sed "$ a This is my monkey, my monkey's name is wukong" my.txt
This is my cat, my cat's name is betty
This is my monkey, my monkey's name is wukong
This is my dog, my dog's name is frank
This is my fish, my fish's name is george
This is my goat, my goat's name is adam





我们可以运用匹配来添加文本：

# 注意其中的/fish/a，这意思是匹配到/fish/后就追加一行
$ sed "/fish/a This is my monkey, my monkey's name is wukong" my.txt
This is my cat, my cat's name is betty
This is my dog, my dog's name is frank
This is my fish, my fish's name is george
This is my monkey, my monkey's name is wukong
This is my goat, my goat's name is adam







追加是啥子，后来网上查了一些资料，明白了，在指定行添加内容，使用/a或者/i,具体例子：
1
sed '/2/i\add a new line' -i install.log
在第二行前添加一行信息命令如上，
1
sed '/3/a\add a new line' -i install.log





