🔸 ssh密钥 
    ⦿ 生成(客户端)  ssh-keygen

    ⦿ 传输(客户端)  scp -P 2222 -r id_rsa.pub root@23.105.192.96:~/.ssh/
    ⦿ 传输(客户端)  scp -P 2222 -r id_rsa.pub root@104.224.139.45:~/.ssh/
    ⦿ 注册(服务器)  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys



🔸 开机启动
    chmod 755 /etc/rc.d/rc.local
    echo 'sleep 10' >> /etc/rc.local
    chkconfig --list   查看开启启动状态...


🔸 解压.

  ⦿ .zip    unzip 文件名






🔸 Linux


  sudo sh -c "echo 'something' >> /etc/privilegedfile"
  sudo sh -c "echo_supervisord_conf > /etc/supervisord.conf"





🔸 Django

  ⦿ Django 版本查询方法一. 
      (djcmsenv) ✘✘∙GCE mycms ➜ python
      Python 2.7.5 (default, Nov  6 2016, 00:28:07)
      [GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux2
      Type "help", "copyright", "credits" or "license" for more information.
      >>> import django
      >>> django.VERSION
      (1, 8, 18, 'final', 0)

  ⦿ Django 版本查询方法而
    转到 Django web 项目主目录并执行以下操作：
    ./manage.py --version


  ⦿ djangocms 版本查询.





🔸 Mysql 

    状态: service mysql status
    启动: service mysql start
    停止: service mysql stop
    重启: service mysql restart





🔸 Nginx

  service nginx restart
  service nginx status

  cd /home/wwwroot/www.0214.live/
  vi /usr/local/nginx/conf/vhost/www.0214.live.conf



🔸 Apache
  service httpd status
  service httpd stop



🔸 supervisord

Supervisor 相当强大,不过我们可能只需要用到其中一小部分。

supervisor 是一个 C/S 模型的程序. 有服务端 和 客户端.
  supervisord   服务端配置
  supervisorctl 客户端配置

supervisor 用来进程管理. 如果某些进程发生意外 可以自动重启这些进程.



⦿ Mac 安装               pip install supervisor
⦿ Centos7 安装           pip install supervisor
⦿ supervisor 默认配置:   echo_supervisord_conf
⦿ 导出默认配置           echo_supervisord_conf > /etc/supervisord.conf
                         sudo sh -c "echo_supervisord_conf > /etc/supervisord.conf"

⦿ 启动: supervisord -c /etc/supervisord.conf
⦿ 状态: ps aux | grep supervisord


⦿ 配置 /etc/supervisord.conf

[unix_http_server]
file=/tmp/supervisor.sock   ; UNIX socket 文件，supervisorctl 会使用
;chmod=0700                 ; socket 文件的 mode，默认是 0700
;chown=nobody:nogroup       ; socket 文件的 owner，格式： uid:gid

;[inet_http_server]         ; HTTP 服务器，提供 web 管理界面
;port=127.0.0.1:9001        ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性
;username=user              ; 登录管理后台的用户名
;password=123               ; 登录管理后台的密码

[supervisord]
logfile=/tmp/supervisord.log ; 日志文件，默认是 $CWD/supervisord.log
logfile_maxbytes=50MB        ; 日志文件大小，超出会 rotate，默认 50MB
logfile_backups=10           ; 日志文件保留备份数量默认 10
loglevel=info                ; 日志级别，默认 info，其它: debug,warn,trace
pidfile=/tmp/supervisord.pid ; pid 文件
nodaemon=false               ; 是否在前台启动，默认是 false，即以 daemon 的方式启动
minfds=1024                  ; 可以打开的文件描述符的最小值，默认 1024
minprocs=200                 ; 可以打开的进程数的最小值，默认 200

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; 通过 UNIX socket 连接 supervisord，路径与 unix_http_server 部分的 file 一致
;serverurl=http://127.0.0.1:9001 ; 通过 HTTP 的方式连接 supervisord

; 包含其他的配置文件
[include]
files = relative/directory/*.ini    ; 可以是 *.conf 或 *.ini





⦿ 使用 supervisorctl
Supervisorctl 是 supervisord 的一个命令行客户端工具，启动时需要指定与 supervisord 使用同一份配置文件，否则与 supervisord 一样按照顺序查找配置文件。

supervisorctl -c /etc/supervisord.conf






